# -*- coding: utf-8 -*-
"""code.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1MA2AoDn3_Oo3Wp7HD1LhVOmUwXqmEKDa
"""

import pandas as pd

# load data
df = pd.read_csv('data/data.csv', index_col='Sample Code Number', na_values='?')
df = df.dropna()

X = df.iloc[:,:-1]
y = df.iloc[:,-1]

"""# Define Classifiers"""

from sklearn.linear_model import LogisticRegression
from sklearn.tree import DecisionTreeClassifier
from sklearn.svm import SVC

clf_LR = LogisticRegression()
clf_DT = DecisionTreeClassifier()
clf_SVM_RBF = SVC(kernel='rbf')

from sklearn.model_selection import KFold
from sklearn.ensemble import VotingClassifier

from sklearn.metrics import accuracy_score

kf = KFold(n_splits=10, shuffle=True)
acc_per_fold = []

for train_index, test_index in kf.split(X):
    X_train = X.iloc[train_index]
    X_test = X.iloc[test_index]
    y_train = y.iloc[train_index]
    y_test = y.iloc[test_index]

    clf_ensemble = VotingClassifier(estimators=[
        ('LR', clf_LR), ('DT', clf_DT), ('SVM', clf_SVM_RBF)], voting='hard')

    clf_ensemble.fit(X_train, y_train)
    y_pred = clf_ensemble.predict(X_test)
    acc_per_fold.append(accuracy_score(y_test, y_pred))

print('Accuracy of ensemble classifier per each fold')
acc_per_fold

import numpy as np

print('Average accuracy of ensemble classifier : %.4f' % np.mean(acc_per_fold))