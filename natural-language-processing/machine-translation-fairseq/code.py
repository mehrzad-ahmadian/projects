# -*- coding: utf-8 -*-
"""code.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1xemX4DE180jX8fVKVAI1ztsOmAyOuYJh
"""

!pip install fairseq bitarray fastBPE hydra-core omegaconf regex requests sacremoses subword_nmt sacrebleu==1.5.1
!pip install transformers==4.28.0

! unzip preprocessed_data.zip

def run_bash(shell_string):
    with open('script.sh', 'w') as file:
        file.write(shell_string)
    !chmod 755 ./script.sh
    !./script.sh

# Tokenization + BPE
from tokenizers import Tokenizer
from tokenizers.models import BPE
from tokenizers.pre_tokenizers import Whitespace
from tokenizers.trainers import BpeTrainer

tokenizer = Tokenizer(BPE())
tokenizer.pre_tokenizer = Whitespace()
trainer = BpeTrainer(special_tokens=["[UNK]"], continuing_subword_prefix="@")
for lang in ["en", "fa"]:
    tokenizer.train(files=[f"preprocessed_data/train.{lang}", f"preprocessed_data/valid.{lang}", f"preprocessed_data/test.{lang}"], trainer=trainer)
    text = "test text for BPE" if lang == "en" else "متن تست بی پی ای"
    output = tokenizer.encode(text)
    print(tokenizer.decode(output.ids))

fairseq_preprocess = """
rm -r data-bin/
TEXT=/content/preprocessed_data
fairseq-preprocess --source-lang en --target-lang fa \
    --trainpref $TEXT/train --validpref $TEXT/valid --testpref $TEXT/test \
    --destdir data-bin/data.tokenized.en-fa \
    --workers 20 \
    --bpe bert \
    --log-format json \
"""
run_bash(fairseq_preprocess)

fairseq_train = """
fairseq-train \
    data-bin/data.tokenized.en-fa \
    --arch transformer --share-decoder-input-output-embed \
    --optimizer adam --adam-betas '(0.9, 0.98)' --clip-norm 0.0 \
    --lr 5e-4 --lr-scheduler inverse_sqrt --warmup-updates 4000 \
    --dropout 0.3 --weight-decay 0.0001 \
    --criterion label_smoothed_cross_entropy --label-smoothing 0.1 \
    --max-tokens 4096 \
    --eval-bleu \
    --eval-bleu-args '{"beam": 5, "max_len_a": 1.2, "max_len_b": 10}' \
    --eval-bleu-detok moses \
    --eval-bleu-remove-bpe \
    --eval-bleu-print-samples \
    --best-checkpoint-metric bleu --maximize-best-checkpoint-metric \
    --max-epoch 50 \
    --patience 10 \
    --save-dir checkpoints \
    # --bpe bert \
    # --fp16 \
    # --reset-optimizer \
    --batch-size 64
"""
run_bash(fairseq_train)

from tqdm.auto import tqdm
MAX_EPOCHS = 2
for i in tqdm(range(1, MAX_EPOCHS)):
    ! fairseq-generate data-bin/data.tokenized.en-fa --path checkpoints/checkpoint{i}.pt --batch-size 128 --beam 5 --remove-bpe --log-format json --tensorboard-logdir 123

! fairseq-generate data-bin/data.tokenized.en-fa --path checkpoints/checkpoint_best.pt --batch-size 128 --beam 5 --remove-bpe --eval-bleu --results-path generate_results

! fairseq-generate data-bin/data.tokenized.en-fa --path checkpoints/checkpoint_best.pt --batch-size 128 --beam 5 --remove-bpe --eval-bleu